Token guardian protection doesn't account for approved operators in `approve()`.

According to the [README](https://github.com/code-423n4/2023-07-lens/tree/main#definition-of-words-and-terms-in-lens-codebase), 
when an address has token guardian enabled, approvals should not work for the tokens owned by that address:

    Token Guardian: Protection mechanism for the tokens held by an address, which restricts transfers and approvals when enabled. See [LIP-4](https://github.com/lens-protocol/LIPs/blob/main/LIPs/lip-4.md) for more.

In `LensHandles.sol`, token guardian is enforced by the `_hasTokenGuardianEnabled()` check in the `approve()` function:

    function approve(address to, uint256 tokenId) public override(IERC721, ERC721) {
        // We allow removing approvals even if the wallet has the token guardian enabled
        if (to != address(0) && _hasTokenGuardianEnabled(msg.sender)) {
            revert HandlesErrors.GuardianEnabled();
        }
        super.approve(to, tokenId);
    }

However, this check is inadequate as approved operators (addresses approved using `setApprovalForAll()` by the owner) 
are also allowed to call `approve()`. We can see this in Openzeppelin's ERC-721 implementation:

    require(
        _msgSender() == owner || isApprovedForAll(owner, _msgSender()),
        "ERC721: approve caller is not token owner or approved for all"
    );

As such, even if an owner has token guardian enabled, approvals can still be set for his tokens by other approved operators, 
leaving the owner's tokens vulnerable. For example:

* Alice sets Bob as an approved operator using `setApprovalForAll()`.
* Alice enables token guardian using `enableTokenGuardian()`.
* If Bob wants to set approvals for Alice's tokens, he can do so by:
  * Disabling his own token guardian using `DANGER__disableTokenGuardian()`.
  * Calling `approve()` for Alice's tokens. This will still work, even though Alice has token guardian enabled.

Note that the `approve()` function in `LensProfiles.sol` also has the same vulnerability.

As token guardian protection in `approve()` does not account for approved operators, although an owner has token guardian 
enabled, approved operators will still be able to set approvals for his tokens.