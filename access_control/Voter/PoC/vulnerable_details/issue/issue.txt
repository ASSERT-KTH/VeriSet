In `Voter.sol` users can perform action like vote, reset or poke , when these actions are performed an external call 
to `FluxToken.sol` `accrueFlux` function is called which accrue unclaimed flux for a given veALCX . While `vote` and 
`reset` function had modifier called `onlyNewEpoch`  which prevented calling `accrueFlux` function multiple times in an epoch.
`poke` function was also calling `accrueFlux` function but in this function no access control modifier `onlyNewEpoch` was  
used which allowed this function to be called multiple time in an epoch.

This vulnerability is breaking a  invariant set by the team , as a user can accrue unlimited flux, they can use the accrued  
flux to boost their voting power each epoch thus getting more voting power than they should have.

A user should never be able to vote with more power than they have.

A user  can mint unlimited flux token and can unlock their escrowed position at any time they want even before then are 
supposed to unlock or can sell those flux token in the marketplace.

Due to unlimited supply of flux token the value of flux token will drop significantly.