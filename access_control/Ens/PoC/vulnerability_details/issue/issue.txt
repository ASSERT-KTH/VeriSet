The fuse constraints can be violated by a malicious owner of the parent node (i.e., the hacker). There are two specific consequences 
the hacker can cause.

* Suppose the subnode has been assigned to a victim user, the hacker can re-claim him as the owner of the subnode even if the 
`PARENT_CANNOT_CONTROL` of the subnode has been burnt.
* Suppose the owner of the subnode remains to be the hacker, he can create sub-subnode even if the `CANNOT_CREATE_SUBDOMAIN` 
of the subnode has been burnt.

Basically, ENS NameWrapper uses the following rules to prevent all previous C4 hacks (note that I will assume the audience has 
some background regarding the ENS codebase).

* The `PARENT_CANNOT_CONTROL` fuse of a subnode can be burnt if and only if the `CANNOT_UNWRAP` fuse of its parent has already 
been burnt.
* The `CANNOT_UNWRAP` fuse of a subnode can be burnt if and only if its `PARENT_CANNOT_CONTROL` fuse has already been burnt.

However, such guarantees would only get effective when the `CANNOT_UNWRAP` fuse of the subject node is burnt.

Considering the following scenario.

1. `sub1.eth` (the ETH2LD node) is registered and wrapped to the hacker - *the ENS registry owner, i.e.,* *`ens.owner`, 
of* *`sub1.eth`* *is the NameWrapper contract.*

2. `sub2.sub1.eth` is created with no fuses burnt, where the wrapper owner is still the hacker - *the ENS registry owner of* 
*`sub2.sub1.eth`* *is the NameWrapper contract.*

3. `sub3.sub2.sub1.eth` is created with no fuses burnt and owned by a victim user - *the ENS registry owner of* *`sub3.sub2.sub1.eth`* 
*is the NameWrapper contract.*

4. the hacker unwraps `sub2.sub1.eth` - *the ENS registry owner of* *`sub2.sub1.eth`* *becomes the hacker.*

5. via ENS registry, the hacker claims himself as the ENS registry owner of `sub3.sub2.sub1.eth`. Note that the `sub3.sub2.sub1.eth` 
in the NameWrapper contract remains valid till now - *the ENS registry owner of* *`sub3.sub2.sub1.eth`* *is the hacker.*

6. the hacker wraps `sub2.sub1.eth` - *the ENS registry owner of* *`sub2.sub1.eth`* *becomes the NameWrapper contract.*

7. the hacker burns the `PARENT_CANNOT_CONTROL` and `CANNOT_UNWRAP` fuses of `sub2.sub1.eth`.

8. the hacker burns the `PARENT_CANNOT_CONTROL`, `CANNOT_UNWRAP`, and `CANNOT_CREATE_SUBDOMAIN` fuses of `sub3.sub2.sub1.eth`. 
**Note that the current ENS registry owner of** **`sub3.sub2.sub1.eth`** **remains to be the hacker**

At this stage, things went wrong.

Again, currently the `sub3.sub2.sub1.eth` is valid in NameWrapper w/ `PARENT_CANNOT_CONTROL | CANNOT_UNWRAP | CANNOT_CREATE_SUBDOMAIN` 
burnt, but the ENS registry owner of `sub3.sub2.sub1.eth` is the hacker.