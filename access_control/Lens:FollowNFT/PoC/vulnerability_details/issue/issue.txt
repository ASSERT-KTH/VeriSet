Users can unfollow through `FollowNFT` contract when LensHub is paused by governance.

When the `LensHub` contract has been paused by governance (`_state` set to `ProtocolState.Paused`), users 
should not be able unfollow profiles. This can be inferred as the `unfollow()` function has the `whenNotPaused` modifier:

    function unfollow(uint256 unfollowerProfileId, uint256[] calldata idsOfProfilesToUnfollow)
        external
        override
        whenNotPaused

However, in the `FollowNFT` contract, which is deployed for each profile that has followers, the `removeFollower()` and 
`burn()` functions do not check if the `LensHub` contract is paused:

    function removeFollower(uint256 followTokenId) external override {
        address followTokenOwner = ownerOf(followTokenId);
        if (followTokenOwner == msg.sender || isApprovedForAll(followTokenOwner, msg.sender)) {
            _unfollowIfHasFollower(followTokenId);
        } else {
            revert DoesNotHavePermissions();
        }
    }

    function burn(uint256 followTokenId) public override {
        _unfollowIfHasFollower(followTokenId);
        super.burn(followTokenId);
    }

As such, whenever the system has been paused by governance, users will still be able to unfollow profiles by wrapping 
their followNFT and then calling either `removeFollower()` or `burn()`.

This could be problematic if governance ever needs to temporarily pause unfollow functionality (eg. for a future upgrade, 
or unfollowing functionality has a bug, etc...).